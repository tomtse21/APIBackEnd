{
  "version": 3,
  "sources": ["../../models/users.ts"],
  "sourcesContent": ["import debug from 'debug';\nimport * as db from '../helpers/database';\n\nexport const findByUsername = async (username: string) => {\n  const query = 'SELECT * from users where username = ?';\n  const user = await db.run_query(query, [username]);\n  return user;\n}\n\nexport const regUser = async(user: any) => {\n  let keys = Object.keys(user);\n  let values = Object.values(user);\n  let key = keys.join(',');\n  let param = '';\n  for(let i: number = 0; i<values.length; i++) {\n    param += '? ,';\n  }\n  param=param.slice(0, -1);\n\n  \n  let query = `INSERT INTO users (${key}) VALUES (${param})`;\n  try {\n    await db.run_insert(query, values);\n    return {status: 201};\n  } catch(err: any) {\n    return err;\n  }\n}\n\nexport const login = async (username: string, password: string) => {\n  const query = 'SELECT * from users where username = ? and password = ?';\n  const user = await db.run_query(query, [username,password]);\n  return user;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,SAAoB;AAEb,MAAM,iBAAiB,OAAO,aAAqB;AACxD,QAAM,QAAQ;AACd,QAAM,OAAO,MAAM,GAAG,UAAU,OAAO,CAAC,QAAQ,CAAC;AACjD,SAAO;AACT;AAEO,MAAM,UAAU,OAAM,SAAc;AACzC,MAAI,OAAO,OAAO,KAAK,IAAI;AAC3B,MAAI,SAAS,OAAO,OAAO,IAAI;AAC/B,MAAI,MAAM,KAAK,KAAK,GAAG;AACvB,MAAI,QAAQ;AACZ,WAAQ,IAAY,GAAG,IAAE,OAAO,QAAQ,KAAK;AAC3C,aAAS;AAAA,EACX;AACA,UAAM,MAAM,MAAM,GAAG,EAAE;AAGvB,MAAI,QAAQ,sBAAsB,gBAAgB;AAClD,MAAI;AACF,UAAM,GAAG,WAAW,OAAO,MAAM;AACjC,WAAO,EAAC,QAAQ,IAAG;AAAA,EACrB,SAAQ,KAAN;AACA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,QAAQ,OAAO,UAAkB,aAAqB;AACjE,QAAM,QAAQ;AACd,QAAM,OAAO,MAAM,GAAG,UAAU,OAAO,CAAC,UAAS,QAAQ,CAAC;AAC1D,SAAO;AACT;",
  "names": []
}
