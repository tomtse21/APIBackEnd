{
  "version": 3,
  "sources": ["../../routes/cats.ts"],
  "sourcesContent": ["import Router, { RouterContext } from \"koa-router\";\nimport bodyParser from \"koa-bodyparser\";\nimport * as model from \"../models/cats\";\nimport { validateCat } from \"../controllers/validation\";\nimport { basicAuth } from \"../controllers/auth\";\n\nconst router = new Router({ prefix: '/api/v1/cats' });\n\n\nconst cats = [\n  { name: 'Hello article', fullText: 'some text to fill the body' }\n];\n\nconst getAll = async (ctx: RouterContext, next: any) => {\n  //ctx.body = cats;\n  let cats = await model.getAll();\n  if (cats.length) {\n    ctx.body = cats;\n  } else {\n    ctx.body = {};\n  }\n  await next();\n}\n\n\nconst createCat = async (ctx: RouterContext, next: any) => {\n  const body = ctx.request.body;\n  let result = await model.add(body);\n  if (result.status == 201) {\n    ctx.status = 201;\n    ctx.body = body;\n  } else {\n    ctx.status = 500;\n    ctx.body = { err: \"insert data failed\" };\n  }\n  await next();\n}\n\nconst updateCat = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  //let {title, fullText} = ctx.request.body;\n  let c: any = ctx.request.body;\n  let name = c.name;\n  if ((id < cats.length + 1) && (id > 0)) {\n    cats[id - 1].name = name;\n    ctx.status = 200;\n    ctx.body = cats;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst deleteCat = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  let article = await model.deleteCat(id);\n  if (article.status==201) {\n    ctx.status = 201\n    ctx.body = { msg: \"Deleted\" }\n  } else {\n    ctx.status = 404;\n    ctx.body = { msg: \"Error\" }\n  }\n  await next();\n}\n\nconst getById = async (ctx: RouterContext, next: any) => {\n  let id = ctx.params.id;\n  let article = await model.getById(id);\n  if (article.length) {\n    ctx.body = article[0];\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\n\nrouter.get('/', getAll);\nrouter.post('/', basicAuth, bodyParser(), createCat);\nrouter.put('/:id([0-9]{1,})', basicAuth, bodyParser(), updateCat);\nrouter.delete('/:id([0-9]{1,})', basicAuth, deleteCat);\n\n\nexport { router };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsC;AACtC,4BAAuB;AACvB,YAAuB;AAEvB,kBAA0B;AAE1B,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAE,QAAQ,eAAe,CAAC;AAGpD,MAAM,OAAO;AAAA,EACX,EAAE,MAAM,iBAAiB,UAAU,6BAA6B;AAClE;AAEA,MAAM,SAAS,OAAO,KAAoB,SAAc;AAEtD,MAAIC,QAAO,MAAM,MAAM,OAAO;AAC9B,MAAIA,MAAK,QAAQ;AACf,QAAI,OAAOA;AAAA,EACb,OAAO;AACL,QAAI,OAAO,CAAC;AAAA,EACd;AACA,QAAM,KAAK;AACb;AAGA,MAAM,YAAY,OAAO,KAAoB,SAAc;AACzD,QAAM,OAAO,IAAI,QAAQ;AACzB,MAAI,SAAS,MAAM,MAAM,IAAI,IAAI;AACjC,MAAI,OAAO,UAAU,KAAK;AACxB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AACb,QAAI,OAAO,EAAE,KAAK,qBAAqB;AAAA,EACzC;AACA,QAAM,KAAK;AACb;AAEA,MAAM,YAAY,OAAO,KAAoB,SAAc;AACzD,MAAI,KAAK,CAAC,IAAI,OAAO;AAErB,MAAI,IAAS,IAAI,QAAQ;AACzB,MAAI,OAAO,EAAE;AACb,MAAK,KAAK,KAAK,SAAS,KAAO,KAAK,GAAI;AACtC,SAAK,KAAK,GAAG,OAAO;AACpB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,YAAY,OAAO,KAAoB,SAAc;AACzD,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,UAAU,MAAM,MAAM,UAAU,EAAE;AACtC,MAAI,QAAQ,UAAQ,KAAK;AACvB,QAAI,SAAS;AACb,QAAI,OAAO,EAAE,KAAK,UAAU;AAAA,EAC9B,OAAO;AACL,QAAI,SAAS;AACb,QAAI,OAAO,EAAE,KAAK,QAAQ;AAAA,EAC5B;AACA,QAAM,KAAK;AACb;AAEA,MAAM,UAAU,OAAO,KAAoB,SAAc;AACvD,MAAI,KAAK,IAAI,OAAO;AACpB,MAAI,UAAU,MAAM,MAAM,QAAQ,EAAE;AACpC,MAAI,QAAQ,QAAQ;AAClB,QAAI,OAAO,QAAQ;AAAA,EACrB,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAGA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,KAAK,KAAK,2BAAW,sBAAAC,SAAW,GAAG,SAAS;AACnD,OAAO,IAAI,mBAAmB,2BAAW,sBAAAA,SAAW,GAAG,SAAS;AAChE,OAAO,OAAO,mBAAmB,uBAAW,SAAS;",
  "names": ["Router", "cats", "bodyParser"]
}
